using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using Castle.ActiveRecord;
using Castle.ActiveRecord.Queries;


#region 'T_CLS_MS' Schema
/*
 * 'TClsMs' class maps to 'T_CLS_MS' table.
 * 	 I_CLS_CD                | Type:VARCHAR2  | Len:3     | Nullable:F | PK:T | FK:F
 * 	 I_CLS_DESC              | Type:VARCHAR2  | Len:48    | Nullable:T | PK:F | FK:F
 * 	 I_CLS_CLS               | Type:VARCHAR2  | Len:1     | Nullable:T | PK:F | FK:F
 * 	 I_SYSUSER_CLS           | Type:VARCHAR2  | Len:1     | Nullable:T | PK:F | FK:F
 * 	 I_INQ_ITEM              | Type:VARCHAR2  | Len:1     | Nullable:T | PK:F | FK:F
 * 	 I_ENTRY_DATE            | Type:DATE      | Len:0     | Nullable:T | PK:F | FK:F
 * 	 I_UPD_DATE              | Type:DATE      | Len:0     | Nullable:T | PK:F | FK:F
 * 	 I_UPD_TIMESTAMP         | Type:VARCHAR2  | Len:17    | Nullable:T | PK:F | FK:F
 */
#endregion
/// <summary>
///	Generated by MyGeneration using the ActiveRecord Object Mapper - 1.0.2
///	Created on 2011/9/6 21:54:54
/// </summary>
namespace Com.GainWinSoft.ERP.Entity
{
    [Serializable]
    public class CClsDetailNoAR 
    {

		#region Private Members

        private string iClsCd;

        public string IClsCd
        {
            get { return iClsCd; }
            set { iClsCd = value; }
        }
        private string iClsDetailCd;

        public string IClsDetailCd
        {
            get { return iClsDetailCd; }
            set { iClsDetailCd = value; }
        }
        private string iLanguageCd;

        public string ILanguageCd
        {
            get { return iLanguageCd; }
            set { iLanguageCd = value; }
        }

        private string iClsDetailDesc;

        public string IClsDetailDesc
        {
            get { return iClsDetailDesc; }
            set { iClsDetailDesc = value; }
        }
        private string iClsNameDesc;

        public string IClsNameDesc
        {
            get { return iClsNameDesc; }
            set { iClsNameDesc = value; }
        }
        private string iInqItem;

        public string IInqItem
        {
            get { return iInqItem; }
            set { iInqItem = value; }
        } 

		
		#endregion

		#region Constuctor(s)

        public CClsDetailNoAR()
		{
  

		}

        //public TClsDetailMs(
        //    string i_cls_cd, 
        //    string i_cls_detail_cd, 
        //    string i_language_cd, 
        //    DateTime i_entry_date, 
        //    DateTime i_upd_date, 
        //    string i_upd_timestamp)
        //    : this()
        //{
        //    iClsCd = i_cls_cd;
        //    iClsDetailCd = i_cls_detail_cd;
        //    iLanguageCd = i_language_cd;
        //    iClsDetailDesc = String.Empty;
        //    iInqItem = String.Empty;
        //    iEntryDate = i_entry_date;
        //    iUpdDate = i_upd_date;
        //    iUpdTimestamp = i_upd_timestamp;
        //}

		#endregion // End of Class Constuctor(s)
		
		#region Public Properties





		#endregion 

			
		#region Equals, HashCode and ToString overrides
		
		/// <summary>
		/// Local implementation of Equals based on unique value members
		/// </summary>
		public override bool Equals( object obj )
		{
			if( this == obj ) return true;
			if( ( obj == null ) || ( obj.GetType() != this.GetType() ) ) return false;
            CClsDetailNoAR castObj = (CClsDetailNoAR)obj; 
			return ( castObj != null ) &&
				( this.iClsCd == castObj.iClsCd ) &&(this.iClsDetailCd==castObj.iClsDetailCd)&&
                (this.iLanguageCd==castObj.iLanguageCd);
		}
		
		/// <summary>
		/// Local implementation of GetHashCode based on unique value members
		/// </summary>
		public override int GetHashCode()
		{
			
			int hash = 57;
            hash = 27 * hash * iClsCd.GetHashCode();
            hash = 27 * hash * iClsDetailCd.GetHashCode();
            hash = 27 * hash * iLanguageCd.GetHashCode();
            return hash; 
		}
		
		/// <summary>
		/// Local implementation of ToString based on class members
		/// </summary>
		public override String ToString()
        {
            StringBuilder sbuffer = new StringBuilder();
			sbuffer.Append("{");
			
			sbuffer.AppendFormat("IClsCd = {0}, ",iClsCd);
			sbuffer.AppendFormat("IClsDetailCd = {0}, ",iClsDetailCd);
			sbuffer.AppendFormat("ILanguageCd = {0}, ",iLanguageCd);
			sbuffer.AppendFormat("IClsDetailDesc = {0}, ",iClsDetailDesc);
            sbuffer.AppendFormat("IClsNameDesc = {0}, ", iClsNameDesc);
            sbuffer.AppendFormat("IInqItem = {0}, ", iInqItem);

			sbuffer.Append(" }");
			return sbuffer.ToString();
        }
		
		#endregion
	}
}
