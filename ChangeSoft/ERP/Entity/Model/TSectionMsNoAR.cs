using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using Castle.ActiveRecord;
using Castle.ActiveRecord.Queries;


#region 'T_SECTION_MS' Schema
/*
 * 'TSectionMs' class maps to 'T_SECTION_MS' table.
 * 	 I_COMPANY_CD            | Type:VARCHAR2  | Len:8     | Nullable:F | PK:T | FK:F
 * 	 I_SECTION_CD            | Type:VARCHAR2  | Len:8     | Nullable:F | PK:T | FK:F
 * 	 I_SECTION_ARG_DESC      | Type:VARCHAR2  | Len:60    | Nullable:T | PK:F | FK:F
 * 	 I_SECTION_DESC          | Type:VARCHAR2  | Len:120   | Nullable:T | PK:F | FK:F
 * 	 I_SECTION_KANA          | Type:VARCHAR2  | Len:30    | Nullable:T | PK:F | FK:F
 * 	 I_RESERVE1              | Type:VARCHAR2  | Len:20    | Nullable:T | PK:F | FK:F
 * 	 I_RESERVE2              | Type:VARCHAR2  | Len:20    | Nullable:T | PK:F | FK:F
 * 	 I_RESERVE3              | Type:VARCHAR2  | Len:20    | Nullable:T | PK:F | FK:F
 * 	 I_INQ_ITEM              | Type:VARCHAR2  | Len:1     | Nullable:T | PK:F | FK:F
 * 	 I_OBJECT_ID             | Type:NUMBER    | Len:0     | Nullable:T | PK:F | FK:F
 * 	 I_ENTRY_DATE            | Type:DATE      | Len:0     | Nullable:T | PK:F | FK:F
 * 	 I_UPD_DATE              | Type:DATE      | Len:0     | Nullable:T | PK:F | FK:F
 * 	 I_UPD_TIMESTAMP         | Type:VARCHAR2  | Len:17    | Nullable:T | PK:F | FK:F
 */
#endregion
/// <summary>
///	Generated by MyGeneration using the ActiveRecord Object Mapper - 1.0.2
///	Created on 2011/9/25 12:45:54
/// </summary>
namespace Com.GainWinSoft.ERP.Entity
{
	public class TSectionMsNoAR : ActiveRecordBase	{

		#region Private Members

		private string iCompanyCd; 
		private string iSectionCd; 
		private string iSectionArgDesc; 
		private string iSectionDesc; 
		private string iSectionKana; 
		private string iReserve1; 
		private string iReserve2; 
		private string iReserve3; 
		private string iInqItem; 
		private decimal iObjectId; 
		private DateTime iEntryDate; 
		private DateTime iUpdDate; 
		private string iUpdTimestamp; 
		
		#endregion

		#region Constuctor(s)
		
		public TSectionMsNoAR()
		{
			iCompanyCd = String.Empty; 
			iSectionCd = String.Empty; 
			iSectionArgDesc = String.Empty; 
			iSectionDesc = String.Empty; 
			iSectionKana = String.Empty; 
			iReserve1 = String.Empty; 
			iReserve2 = String.Empty; 
			iReserve3 = String.Empty; 
			iInqItem = String.Empty; 
			iObjectId = 0; 
			iEntryDate = DateTime.MinValue; 
			iUpdDate = DateTime.MinValue; 
			iUpdTimestamp = String.Empty; 

		}

        public TSectionMsNoAR(
			string i_company_cd, 
			string i_section_cd)
			: this()
		{
			iCompanyCd = i_company_cd;
			iSectionCd = i_section_cd;
			iSectionArgDesc = String.Empty;
			iSectionDesc = String.Empty;
			iSectionKana = String.Empty;
			iReserve1 = String.Empty;
			iReserve2 = String.Empty;
			iReserve3 = String.Empty;
			iInqItem = String.Empty;
			iObjectId = 0;
			iEntryDate = DateTime.MinValue;
			iUpdDate = DateTime.MinValue;
			iUpdTimestamp = String.Empty;
		}

		#endregion // End of Class Constuctor(s)
		
		#region Public Properties
			
		public virtual string ICompanyCd
		{
			get { return iCompanyCd; }
			set { iCompanyCd = value; }
		}

		public virtual string ISectionCd
		{
			get { return iSectionCd; }
			set { iSectionCd = value; }
		}

		public virtual string ISectionArgDesc
		{
			get { return iSectionArgDesc; }
			set { iSectionArgDesc = value; }
		}

		public virtual string ISectionDesc
		{
			get { return iSectionDesc; }
			set { iSectionDesc = value; }
		}

		public virtual string ISectionKana
		{
			get { return iSectionKana; }
			set { iSectionKana = value; }
		}

		public virtual string IReserve1
		{
			get { return iReserve1; }
			set { iReserve1 = value; }
		}

		public virtual string IReserve2
		{
			get { return iReserve2; }
			set { iReserve2 = value; }
		}

		public virtual string IReserve3
		{
			get { return iReserve3; }
			set { iReserve3 = value; }
		}

		public virtual string IInqItem
		{
			get { return iInqItem; }
			set { iInqItem = value; }
		}

		public virtual decimal IObjectId
		{
			get { return iObjectId; }
			set { iObjectId = value; }
		}

		public virtual DateTime IEntryDate
		{
			get { return iEntryDate; }
			set { iEntryDate = value; }
		}

		public virtual DateTime IUpdDate
		{
			get { return iUpdDate; }
			set { iUpdDate = value; }
		}

		public virtual string IUpdTimestamp
		{
			get { return iUpdTimestamp; }
			set { iUpdTimestamp = value; }
		}


		#endregion 

			
		#region Equals, HashCode and ToString overrides
		
		/// <summary>
		/// Local implementation of Equals based on unique value members
		/// </summary>
		public override bool Equals( object obj )
		{
			if( this == obj ) return true;
			if( ( obj == null ) || ( obj.GetType() != this.GetType() ) ) return false;
            TSectionMsNoAR castObj = (TSectionMsNoAR)obj; 
			return ( castObj != null ) &&
				( this.iCompanyCd == castObj.ICompanyCd ) &&
				( this.iSectionCd == castObj.ISectionCd );
		}
		
		/// <summary>
		/// Local implementation of GetHashCode based on unique value members
		/// </summary>
		public override int GetHashCode()
		{
			
			int hash = 57; 
			hash = 27 * hash * iCompanyCd.GetHashCode();
			hash = 27 * hash * iSectionCd.GetHashCode();
			return hash; 
		}
		
		/// <summary>
		/// Local implementation of ToString based on class members
		/// </summary>
		public override String ToString()
        {
            StringBuilder sbuffer = new StringBuilder();
			sbuffer.Append("{");
			
			sbuffer.AppendFormat("ICompanyCd = {0}, ",iCompanyCd);
			sbuffer.AppendFormat("ISectionCd = {0}, ",iSectionCd);
			sbuffer.AppendFormat("ISectionArgDesc = {0}, ",iSectionArgDesc);
			sbuffer.AppendFormat("ISectionDesc = {0}, ",iSectionDesc);
			sbuffer.AppendFormat("ISectionKana = {0}, ",iSectionKana);
			sbuffer.AppendFormat("IReserve1 = {0}, ",iReserve1);
			sbuffer.AppendFormat("IReserve2 = {0}, ",iReserve2);
			sbuffer.AppendFormat("IReserve3 = {0}, ",iReserve3);
			sbuffer.AppendFormat("IInqItem = {0}, ",iInqItem);
			sbuffer.AppendFormat("IObjectId = {0}, ",iObjectId);
			sbuffer.AppendFormat("IEntryDate = {0}, ",iEntryDate);
			sbuffer.AppendFormat("IUpdDate = {0}, ",iUpdDate);
			sbuffer.AppendFormat("IUpdTimestamp = {0}, ",iUpdTimestamp);
			sbuffer.Append(" }");
			return sbuffer.ToString();
        }
		
		#endregion
	}
}
