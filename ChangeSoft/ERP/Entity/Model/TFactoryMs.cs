using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using Castle.ActiveRecord;
using Castle.ActiveRecord.Queries;


#region 'T_FACTORY_MS' Schema
/*
 * 'TFactoryMs' class maps to 'T_FACTORY_MS' table.
 * 	 I_FAC_CD                | Type:VARCHAR2  | Len:8     | Nullable:F | PK:T | FK:F
 * 	 I_COMPANY_CD            | Type:VARCHAR2  | Len:8     | Nullable:F | PK:F | FK:F
 * 	 I_BASE_CD               | Type:VARCHAR2  | Len:8     | Nullable:T | PK:F | FK:F
 * 	 I_COUNTRY_CD            | Type:VARCHAR2  | Len:6     | Nullable:T | PK:F | FK:F
 * 	 I_TIMEZONE_CD           | Type:VARCHAR2  | Len:6     | Nullable:T | PK:F | FK:F
 * 	 I_LANGUAGE_CD           | Type:VARCHAR2  | Len:6     | Nullable:T | PK:F | FK:F
 * 	 I_SECTION_CD            | Type:VARCHAR2  | Len:8     | Nullable:F | PK:F | FK:F
 * 	 I_FAC_ARG_DESC          | Type:VARCHAR2  | Len:60    | Nullable:T | PK:F | FK:F
 * 	 I_FAC_DESC              | Type:VARCHAR2  | Len:120   | Nullable:T | PK:F | FK:F
 * 	 I_FAC_DESC_KANA         | Type:VARCHAR2  | Len:30    | Nullable:T | PK:F | FK:F
 * 	 I_MAIL_NO               | Type:VARCHAR2  | Len:10    | Nullable:T | PK:F | FK:F
 * 	 I_ADDRESS1              | Type:VARCHAR2  | Len:80    | Nullable:T | PK:F | FK:F
 * 	 I_ADDRESS2              | Type:VARCHAR2  | Len:80    | Nullable:T | PK:F | FK:F
 * 	 I_ADDRESS3              | Type:VARCHAR2  | Len:80    | Nullable:T | PK:F | FK:F
 * 	 I_TEL                   | Type:VARCHAR2  | Len:20    | Nullable:T | PK:F | FK:F
 * 	 I_FAX_NO                | Type:VARCHAR2  | Len:20    | Nullable:T | PK:F | FK:F
 * 	 I_DL_CURR_CD            | Type:VARCHAR2  | Len:4     | Nullable:F | PK:F | FK:F
 * 	 I_TAX_CHARGED_CLS       | Type:VARCHAR2  | Len:2     | Nullable:F | PK:F | FK:F
 * 	 I_DEL_WH_IN_CD          | Type:VARCHAR2  | Len:8     | Nullable:T | PK:F | FK:F
 * 	 I_DEL_WH_OUT_CD         | Type:VARCHAR2  | Len:8     | Nullable:T | PK:F | FK:F
 * 	 I_INQ_ITEM              | Type:VARCHAR2  | Len:1     | Nullable:T | PK:F | FK:F
 * 	 I_OBJECT_ID             | Type:NUMBER    | Len:0     | Nullable:T | PK:F | FK:F
 * 	 I_ENTRY_DATE            | Type:DATE      | Len:0     | Nullable:F | PK:F | FK:F
 * 	 I_UPD_DATE              | Type:DATE      | Len:0     | Nullable:F | PK:F | FK:F
 * 	 I_UPD_TIMESTAMP         | Type:VARCHAR2  | Len:17    | Nullable:F | PK:F | FK:F
 */
#endregion
/// <summary>
///	Generated by MyGeneration using the ActiveRecord Object Mapper - 1.0.2
///	Created on 2011/9/11 21:33:44
/// </summary>
namespace Com.GainWinSoft.ERP.Entity
{
	[Serializable , ActiveRecord("T_FACTORY_MS")]
	public class TFactoryMs : ActiveRecordBase	{

		#region Private Members

		private string iFacCd; 
		private string iCompanyCd; 
		private string iBaseCd; 
		private string iCountryCd; 
		private string iTimezoneCd; 
		private string iLanguageCd; 
		private string iSectionCd; 
		private string iFacArgDesc; 
		private string iFacDesc; 
		private string iFacDescKana; 
		private string iMailNo; 
		private string iAddress1; 
		private string iAddress2; 
		private string iAddress3; 
		private string iTel; 
		private string iFaxNo; 
		private string iDlCurrCd; 
		private string iTaxChargedCls; 
		private string iDelWhInCd; 
		private string iDelWhOutCd; 
		private string iInqItem; 
		private decimal iObjectId; 
		private DateTime iEntryDate; 
		private DateTime iUpdDate; 
		private string iUpdTimestamp; 
		
		#endregion

		#region Constuctor(s)
		
		public TFactoryMs()
		{
			iFacCd = String.Empty; 
			iCompanyCd = String.Empty; 
			iBaseCd = String.Empty; 
			iCountryCd = String.Empty; 
			iTimezoneCd = String.Empty; 
			iLanguageCd = String.Empty; 
			iSectionCd = String.Empty; 
			iFacArgDesc = String.Empty; 
			iFacDesc = String.Empty; 
			iFacDescKana = String.Empty; 
			iMailNo = String.Empty; 
			iAddress1 = String.Empty; 
			iAddress2 = String.Empty; 
			iAddress3 = String.Empty; 
			iTel = String.Empty; 
			iFaxNo = String.Empty; 
			iDlCurrCd = String.Empty; 
			iTaxChargedCls = String.Empty; 
			iDelWhInCd = String.Empty; 
			iDelWhOutCd = String.Empty; 
			iInqItem = String.Empty; 
			iObjectId = 0; 
			iEntryDate = DateTime.MinValue; 
			iUpdDate = DateTime.MinValue; 
			iUpdTimestamp = String.Empty; 

		}

		public TFactoryMs(
			string i_fac_cd, 
			string i_company_cd, 
			string i_section_cd, 
			string i_dl_curr_cd, 
			string i_tax_charged_cls, 
			DateTime i_entry_date, 
			DateTime i_upd_date, 
			string i_upd_timestamp)
			: this()
		{
			iFacCd = i_fac_cd;
			iCompanyCd = i_company_cd;
			iBaseCd = String.Empty;
			iCountryCd = String.Empty;
			iTimezoneCd = String.Empty;
			iLanguageCd = String.Empty;
			iSectionCd = i_section_cd;
			iFacArgDesc = String.Empty;
			iFacDesc = String.Empty;
			iFacDescKana = String.Empty;
			iMailNo = String.Empty;
			iAddress1 = String.Empty;
			iAddress2 = String.Empty;
			iAddress3 = String.Empty;
			iTel = String.Empty;
			iFaxNo = String.Empty;
			iDlCurrCd = i_dl_curr_cd;
			iTaxChargedCls = i_tax_charged_cls;
			iDelWhInCd = String.Empty;
			iDelWhOutCd = String.Empty;
			iInqItem = String.Empty;
			iObjectId = 0;
			iEntryDate = i_entry_date;
			iUpdDate = i_upd_date;
			iUpdTimestamp = i_upd_timestamp;
		}

		#endregion // End of Class Constuctor(s)
		
		#region Public Properties
			
		[PrimaryKey(PrimaryKeyType.Identity ,"I_FAC_CD", Length=8)]
		public virtual string IFacCd
		{
			get { return iFacCd; }
			set { iFacCd = value; }
		}

		[Property(Column="I_COMPANY_CD", NotNull=true, Length=8)]
		public virtual string ICompanyCd
		{
			get { return iCompanyCd; }
			set { iCompanyCd = value; }
		}

		[Property(Column="I_BASE_CD", Length=8)]
		public virtual string IBaseCd
		{
			get { return iBaseCd; }
			set { iBaseCd = value; }
		}

		[Property(Column="I_COUNTRY_CD", Length=6)]
		public virtual string ICountryCd
		{
			get { return iCountryCd; }
			set { iCountryCd = value; }
		}

		[Property(Column="I_TIMEZONE_CD", Length=6)]
		public virtual string ITimezoneCd
		{
			get { return iTimezoneCd; }
			set { iTimezoneCd = value; }
		}

		[Property(Column="I_LANGUAGE_CD", Length=6)]
		public virtual string ILanguageCd
		{
			get { return iLanguageCd; }
			set { iLanguageCd = value; }
		}

		[Property(Column="I_SECTION_CD", NotNull=true, Length=8)]
		public virtual string ISectionCd
		{
			get { return iSectionCd; }
			set { iSectionCd = value; }
		}

		[Property(Column="I_FAC_ARG_DESC", Length=60)]
		public virtual string IFacArgDesc
		{
			get { return iFacArgDesc; }
			set { iFacArgDesc = value; }
		}

		[Property(Column="I_FAC_DESC", Length=120)]
		public virtual string IFacDesc
		{
			get { return iFacDesc; }
			set { iFacDesc = value; }
		}

		[Property(Column="I_FAC_DESC_KANA", Length=30)]
		public virtual string IFacDescKana
		{
			get { return iFacDescKana; }
			set { iFacDescKana = value; }
		}

		[Property(Column="I_MAIL_NO", Length=10)]
		public virtual string IMailNo
		{
			get { return iMailNo; }
			set { iMailNo = value; }
		}

		[Property(Column="I_ADDRESS1", Length=80)]
		public virtual string IAddress1
		{
			get { return iAddress1; }
			set { iAddress1 = value; }
		}

		[Property(Column="I_ADDRESS2", Length=80)]
		public virtual string IAddress2
		{
			get { return iAddress2; }
			set { iAddress2 = value; }
		}

		[Property(Column="I_ADDRESS3", Length=80)]
		public virtual string IAddress3
		{
			get { return iAddress3; }
			set { iAddress3 = value; }
		}

		[Property(Column="I_TEL", Length=20)]
		public virtual string ITel
		{
			get { return iTel; }
			set { iTel = value; }
		}

		[Property(Column="I_FAX_NO", Length=20)]
		public virtual string IFaxNo
		{
			get { return iFaxNo; }
			set { iFaxNo = value; }
		}

		[Property(Column="I_DL_CURR_CD", NotNull=true, Length=4)]
		public virtual string IDlCurrCd
		{
			get { return iDlCurrCd; }
			set { iDlCurrCd = value; }
		}

		[Property(Column="I_TAX_CHARGED_CLS", NotNull=true, Length=2)]
		public virtual string ITaxChargedCls
		{
			get { return iTaxChargedCls; }
			set { iTaxChargedCls = value; }
		}

		[Property(Column="I_DEL_WH_IN_CD", Length=8)]
		public virtual string IDelWhInCd
		{
			get { return iDelWhInCd; }
			set { iDelWhInCd = value; }
		}

		[Property(Column="I_DEL_WH_OUT_CD", Length=8)]
		public virtual string IDelWhOutCd
		{
			get { return iDelWhOutCd; }
			set { iDelWhOutCd = value; }
		}

		[Property(Column="I_INQ_ITEM", Length=1)]
		public virtual string IInqItem
		{
			get { return iInqItem; }
			set { iInqItem = value; }
		}

		[Property(Column="I_OBJECT_ID")]
		public virtual decimal IObjectId
		{
			get { return iObjectId; }
			set { iObjectId = value; }
		}

		[Property(Column="I_ENTRY_DATE", NotNull=true)]
		public virtual DateTime IEntryDate
		{
			get { return iEntryDate; }
			set { iEntryDate = value; }
		}

		[Property(Column="I_UPD_DATE", NotNull=true)]
		public virtual DateTime IUpdDate
		{
			get { return iUpdDate; }
			set { iUpdDate = value; }
		}

		[Property(Column="I_UPD_TIMESTAMP", NotNull=true, Length=17)]
		public virtual string IUpdTimestamp
		{
			get { return iUpdTimestamp; }
			set { iUpdTimestamp = value; }
		}


		#endregion 

			
		#region Equals, HashCode and ToString overrides
		
		/// <summary>
		/// Local implementation of Equals based on unique value members
		/// </summary>
		public override bool Equals( object obj )
		{
			if( this == obj ) return true;
			if( ( obj == null ) || ( obj.GetType() != this.GetType() ) ) return false;
			TFactoryMs castObj = (TFactoryMs)obj; 
			return ( castObj != null ) &&
				( this.iFacCd == castObj.IFacCd );
		}
		
		/// <summary>
		/// Local implementation of GetHashCode based on unique value members
		/// </summary>
		public override int GetHashCode()
		{
			
			int hash = 57; 
			hash = 27 * hash * iFacCd.GetHashCode();
			return hash; 
		}
		
		/// <summary>
		/// Local implementation of ToString based on class members
		/// </summary>
		public override String ToString()
        {
            StringBuilder sbuffer = new StringBuilder();
			sbuffer.Append("{");
			
			sbuffer.AppendFormat("IFacCd = {0}, ",iFacCd);
			sbuffer.AppendFormat("ICompanyCd = {0}, ",iCompanyCd);
			sbuffer.AppendFormat("IBaseCd = {0}, ",iBaseCd);
			sbuffer.AppendFormat("ICountryCd = {0}, ",iCountryCd);
			sbuffer.AppendFormat("ITimezoneCd = {0}, ",iTimezoneCd);
			sbuffer.AppendFormat("ILanguageCd = {0}, ",iLanguageCd);
			sbuffer.AppendFormat("ISectionCd = {0}, ",iSectionCd);
			sbuffer.AppendFormat("IFacArgDesc = {0}, ",iFacArgDesc);
			sbuffer.AppendFormat("IFacDesc = {0}, ",iFacDesc);
			sbuffer.AppendFormat("IFacDescKana = {0}, ",iFacDescKana);
			sbuffer.AppendFormat("IMailNo = {0}, ",iMailNo);
			sbuffer.AppendFormat("IAddress1 = {0}, ",iAddress1);
			sbuffer.AppendFormat("IAddress2 = {0}, ",iAddress2);
			sbuffer.AppendFormat("IAddress3 = {0}, ",iAddress3);
			sbuffer.AppendFormat("ITel = {0}, ",iTel);
			sbuffer.AppendFormat("IFaxNo = {0}, ",iFaxNo);
			sbuffer.AppendFormat("IDlCurrCd = {0}, ",iDlCurrCd);
			sbuffer.AppendFormat("ITaxChargedCls = {0}, ",iTaxChargedCls);
			sbuffer.AppendFormat("IDelWhInCd = {0}, ",iDelWhInCd);
			sbuffer.AppendFormat("IDelWhOutCd = {0}, ",iDelWhOutCd);
			sbuffer.AppendFormat("IInqItem = {0}, ",iInqItem);
			sbuffer.AppendFormat("IObjectId = {0}, ",iObjectId);
			sbuffer.AppendFormat("IEntryDate = {0}, ",iEntryDate);
			sbuffer.AppendFormat("IUpdDate = {0}, ",iUpdDate);
			sbuffer.AppendFormat("IUpdTimestamp = {0}, ",iUpdTimestamp);
			sbuffer.Append(" }");
			return sbuffer.ToString();
        }
		
		#endregion
	}
}
