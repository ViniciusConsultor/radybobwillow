using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using Castle.ActiveRecord;
//using Castle.ActiveRecord.Queries;
//using NHibernate.Expression;
//using NHibernate.Generics;


#region 'TRateMsID' Schema

#endregion
/// <summary>
///	Generated by MyGeneration using the ActiveRecord Object Mapper - 1.0.2
///	Created on 2011/09/14 11:03:50
/// </summary>
namespace Com.GainWinSoft.ERP.Entity
{
    [Serializable]

    public class TRateMsID
    {

        #region Private Members

                
        private string iCompanyCd;
        private string iRateCls;
        private string iDlCurrCd;
        private decimal iEffEndDate;
        



        #endregion

        #region Constuctor(s)

        public TRateMsID()
        {
			iCompanyCd = String.Empty; 
			iRateCls = String.Empty; 
			iDlCurrCd = String.Empty; 
			iEffEndDate = 0;
        }


        public TRateMsID(			string i_company_cd, 
			string i_rate_cls, 
			string i_dl_curr_cd, 
			decimal i_eff_end_date)
        {
			iCompanyCd = i_company_cd;
			iRateCls = i_rate_cls;
			iDlCurrCd = i_dl_curr_cd;
			iEffEndDate = i_eff_end_date;
        }
        #endregion // End of Class Constuctor(s)

        #region Public Properties



		[KeyProperty(Column="I_COMPANY_CD", Length=8)]
		public virtual string ICompanyCd
		{
			get { return iCompanyCd; }
			set { iCompanyCd = value; }
		}

		[KeyProperty(Column="I_RATE_CLS", Length=2)]
		public virtual string IRateCls
		{
			get { return iRateCls; }
			set { iRateCls = value; }
		}

		[KeyProperty(Column="I_DL_CURR_CD", Length=4)]
		public virtual string IDlCurrCd
		{
			get { return iDlCurrCd; }
			set { iDlCurrCd = value; }
		}

		[KeyProperty(Column="I_EFF_END_DATE",Length=8)]
		public virtual decimal IEffEndDate
		{
			get { return iEffEndDate; }
			set { iEffEndDate = value; }
        }
        #endregion


        #region Equals, HashCode and ToString overrides

        /// <summary>
        /// Local implementation of Equals based on unique value members
        /// </summary>
        public override bool Equals(object obj)
        {
            if (this == obj) return true;
            if ((obj == null) || (obj.GetType() != this.GetType())) return false;
            TRateMsID castObj = (TRateMsID)obj;
            return (castObj != null) &&
                (this.iCompanyCd == castObj.ICompanyCd) &&
                (this.iRateCls == castObj.IRateCls) &&
                (this.iDlCurrCd == castObj.IDlCurrCd) &&
                (this.iEffEndDate == castObj.IEffEndDate);
        }

        /// <summary>
        /// Local implementation of GetHashCode based on unique value members
        /// </summary>
        public override int GetHashCode()
        {

            int hash = 57;
            hash = 27 * hash * iCompanyCd.GetHashCode();
            hash = 27 * hash * iRateCls.GetHashCode();
            hash = 27 * hash * iDlCurrCd.GetHashCode();
            hash = 27 * hash * iEffEndDate.GetHashCode();
            return hash;
        }

        /// <summary>
        /// Local implementation of ToString based on class members
        /// </summary>
        public override String ToString()
        {
            StringBuilder sbuffer = new StringBuilder();
            sbuffer.Append("{");

            
           sbuffer.AppendFormat("ICompanyCd = {0}, ",iCompanyCd);
           sbuffer.AppendFormat("IRateCls = {0}, ",iRateCls);
           sbuffer.AppendFormat("IDlCurrCd = {0}, ",iDlCurrCd);
           sbuffer.AppendFormat("IEffEndDate = {0}, ",iEffEndDate);
            
            sbuffer.Append(" }");
            return sbuffer.ToString();
        }

        #endregion
    }


}
