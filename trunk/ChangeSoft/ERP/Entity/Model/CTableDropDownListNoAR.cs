using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using Castle.ActiveRecord;
using Castle.ActiveRecord.Queries;


#region 'TableDropDownList' Schema
/*
 * 'CTableDropDownListNoAR' class maps to 'TableDropDownList' dummy table.
 * 	 I_CD                | Type:VARCHAR2  | Len:20     | Nullable:F | PK:T | FK:F
 * 	 I_NAME              | Type:VARCHAR2  | Len:200    | Nullable:T | PK:F | FK:F
 */
#endregion
/// <summary>
///	Generated by MyGeneration using the ActiveRecord Object Mapper - 1.0.2
///	Created on 2011/9/6 21:54:54
/// </summary>
namespace Com.GainWinSoft.ERP.Entity
{
    [Serializable]
    public class CTableDropDownListNoAR 
    {

		#region Private Members

        private string iCd;

        public string ICd
        {
            get { return iCd; }
            set { iCd = value; }
        }
        private string iName;

        public string IName
        {
            get { return iName; }
            set { iName = value; }
        }
		
		#endregion

		#region Constuctor(s)

        public CTableDropDownListNoAR()
		{
		}

		#endregion // End of Class Constuctor(s)
			
		#region Equals, HashCode and ToString overrides
		
		/// <summary>
		/// Local implementation of Equals based on unique value members
		/// </summary>
		public override bool Equals( object obj )
		{
			if( this == obj ) return true;
			if( ( obj == null ) || ( obj.GetType() != this.GetType() ) ) return false;
            CTableDropDownListNoAR castObj = (CTableDropDownListNoAR)obj; 
			return ( castObj != null ) &&
                (this.iCd == castObj.iCd) && (this.iName == castObj.iName);
		}
		
		/// <summary>
		/// Local implementation of GetHashCode based on unique value members
		/// </summary>
		public override int GetHashCode()
		{
			
			int hash = 57;
            hash = 27 * hash * iCd.GetHashCode();
            hash = 27 * hash * iName.GetHashCode();
            return hash; 
		}
		
		/// <summary>
		/// Local implementation of ToString based on class members
		/// </summary>
		public override String ToString()
        {
            StringBuilder sbuffer = new StringBuilder();
			sbuffer.Append("{");

            sbuffer.AppendFormat("ICd = {0}, ", iCd);
            sbuffer.AppendFormat("IName = {0}, ", iName);

			sbuffer.Append(" }");
			return sbuffer.ToString();
        }
		
		#endregion
	}
}
