using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using Castle.ActiveRecord;
using Castle.ActiveRecord.Queries;


#region 'T_COMPANY_CONDITION_MS' Schema
/*
 * 'TCompanyConditionMs' class maps to 'T_COMPANY_CONDITION_MS' table.
 * 	 I_COMPANY_CD            | Type:VARCHAR2  | Len:8     | Nullable:F | PK:T | FK:F
 * 	 I_CO_GROUP_CD           | Type:VARCHAR2  | Len:8     | Nullable:T | PK:F | FK:F
 * 	 I_COUNTRY_CD            | Type:VARCHAR2  | Len:6     | Nullable:F | PK:F | FK:F
 * 	 I_LANGUAGE_CD           | Type:VARCHAR2  | Len:6     | Nullable:F | PK:F | FK:F
 * 	 I_CONDITION_CD          | Type:VARCHAR2  | Len:6     | Nullable:T | PK:F | FK:F
 * 	 I_COMPANY_ARG_DESC      | Type:VARCHAR2  | Len:60    | Nullable:T | PK:F | FK:F
 * 	 I_COMPANY_DESC          | Type:VARCHAR2  | Len:120   | Nullable:T | PK:F | FK:F
 * 	 I_COMPANY_DESC_KANA     | Type:VARCHAR2  | Len:30    | Nullable:T | PK:F | FK:F
 * 	 I_MAIL_NO               | Type:VARCHAR2  | Len:10    | Nullable:F | PK:F | FK:F
 * 	 I_ADDRESS1              | Type:VARCHAR2  | Len:80    | Nullable:T | PK:F | FK:F
 * 	 I_ADDRESS2              | Type:VARCHAR2  | Len:80    | Nullable:T | PK:F | FK:F
 * 	 I_ADDRESS3              | Type:VARCHAR2  | Len:80    | Nullable:T | PK:F | FK:F
 * 	 I_TEL                   | Type:VARCHAR2  | Len:20    | Nullable:F | PK:F | FK:F
 * 	 I_FAX_NO                | Type:VARCHAR2  | Len:20    | Nullable:F | PK:F | FK:F
 * 	 I_SALES_CLOSING_DATE    | Type:NUMBER    | Len:0     | Nullable:F | PK:F | FK:F
 * 	 I_PUR_CLOSING_DATE      | Type:NUMBER    | Len:0     | Nullable:F | PK:F | FK:F
 * 	 I_NATIVE_CURR_CD        | Type:VARCHAR2  | Len:4     | Nullable:F | PK:F | FK:F
 * 	 I_DATE_TYPE             | Type:VARCHAR2  | Len:2     | Nullable:F | PK:F | FK:F
 * 	 I_MULTI_FAC_CLS         | Type:VARCHAR2  | Len:2     | Nullable:F | PK:F | FK:F
 * 	 I_TOTAL_MST_SET_CLS     | Type:VARCHAR2  | Len:2     | Nullable:F | PK:F | FK:F
 * 	 I_MRP_CHK_FLG           | Type:VARCHAR2  | Len:1     | Nullable:F | PK:F | FK:F
 * 	 I_NAT_CURR_FRC_CLS      | Type:VARCHAR2  | Len:2     | Nullable:F | PK:F | FK:F
 * 	 I_UP_REF_CLS            | Type:VARCHAR2  | Len:2     | Nullable:F | PK:F | FK:F
 * 	 I_LV_CTRL_CLS           | Type:VARCHAR2  | Len:2     | Nullable:F | PK:F | FK:F
 * 	 I_FC_UP_CLS             | Type:VARCHAR2  | Len:2     | Nullable:F | PK:F | FK:F
 * 	 I_DATA_SAVE_PATH        | Type:VARCHAR2  | Len:256   | Nullable:F | PK:F | FK:F
 * 	 I_LOGIN_USER            | Type:VARCHAR2  | Len:20    | Nullable:T | PK:F | FK:F
 * 	 I_LOGIN_PSWD            | Type:VARCHAR2  | Len:30    | Nullable:T | PK:F | FK:F
 * 	 I_DATA_SAVE_PATH_PS     | Type:VARCHAR2  | Len:256   | Nullable:F | PK:F | FK:F
 * 	 I_LOGIN_USER_PS         | Type:VARCHAR2  | Len:20    | Nullable:T | PK:F | FK:F
 * 	 I_LOGIN_PSWD_PS         | Type:VARCHAR2  | Len:30    | Nullable:T | PK:F | FK:F
 * 	 I_SALES_CTRL_CLS        | Type:VARCHAR2  | Len:2     | Nullable:F | PK:F | FK:F
 * 	 I_SALES_EMP_CLS         | Type:VARCHAR2  | Len:2     | Nullable:F | PK:F | FK:F
 * 	 I_SALES_UNREALIZED_CTRL_CLS| Type:VARCHAR2  | Len:2     | Nullable:F | PK:F | FK:F
 * 	 I_PUR_CTRL_CLS          | Type:VARCHAR2  | Len:2     | Nullable:F | PK:F | FK:F
 * 	 I_PUR_EMP_CLS           | Type:VARCHAR2  | Len:2     | Nullable:F | PK:F | FK:F
 * 	 I_PUR_OWED_CTRL_CLS     | Type:VARCHAR2  | Len:2     | Nullable:F | PK:F | FK:F
 * 	 I_RESERVE1              | Type:VARCHAR2  | Len:20    | Nullable:T | PK:F | FK:F
 * 	 I_RESERVE2              | Type:VARCHAR2  | Len:20    | Nullable:T | PK:F | FK:F
 * 	 I_RESERVE3              | Type:VARCHAR2  | Len:20    | Nullable:T | PK:F | FK:F
 * 	 I_INQ_ITEM              | Type:VARCHAR2  | Len:1     | Nullable:T | PK:F | FK:F
 * 	 I_ENTRY_DATE            | Type:DATE      | Len:0     | Nullable:F | PK:F | FK:F
 * 	 I_UPD_DATE              | Type:DATE      | Len:0     | Nullable:F | PK:F | FK:F
 * 	 I_UPD_TIMESTAMP         | Type:VARCHAR2  | Len:17    | Nullable:F | PK:F | FK:F
 */
#endregion
/// <summary>
///	Generated by MyGeneration using the ActiveRecord Object Mapper - 1.0.2
///	Created on 2011/9/11 21:38:37
/// </summary>
namespace Com.GainWinSoft.ERP.Entity
{
	[Serializable , ActiveRecord("T_COMPANY_CONDITION_MS")]
	public class TCompanyConditionMs : ActiveRecordBase	{

		#region Private Members

		private string iCompanyCd; 
		private string iCoGroupCd; 
		private string iCountryCd; 
		private string iLanguageCd; 
		private string iConditionCd; 
		private string iCompanyArgDesc; 
		private string iCompanyDesc; 
		private string iCompanyDescKana; 
		private string iMailNo; 
		private string iAddress1; 
		private string iAddress2; 
		private string iAddress3; 
		private string iTel; 
		private string iFaxNo; 
		private decimal iSalesClosingDate; 
		private decimal iPurClosingDate; 
		private string iNativeCurrCd; 
		private string iDateType; 
		private string iMultiFacCls; 
		private string iTotalMstSetCls; 
		private string iMrpChkFlg; 
		private string iNatCurrFrcCls; 
		private string iUpRefCls; 
		private string iLvCtrlCls; 
		private string iFcUpCls; 
		private string iDataSavePath; 
		private string iLoginUser; 
		private string iLoginPswd; 
		private string iDataSavePathPs; 
		private string iLoginUserPs; 
		private string iLoginPswdPs; 
		private string iSalesCtrlCls; 
		private string iSalesEmpCls; 
		private string iSalesUnrealizedCtrlCls; 
		private string iPurCtrlCls; 
		private string iPurEmpCls; 
		private string iPurOwedCtrlCls; 
		private string iReserve1; 
		private string iReserve2; 
		private string iReserve3; 
		private string iInqItem; 
		private DateTime iEntryDate; 
		private DateTime iUpdDate; 
		private string iUpdTimestamp; 
		
		#endregion

		#region Constuctor(s)
		
		public TCompanyConditionMs()
		{
			iCompanyCd = String.Empty; 
			iCoGroupCd = String.Empty; 
			iCountryCd = String.Empty; 
			iLanguageCd = String.Empty; 
			iConditionCd = String.Empty; 
			iCompanyArgDesc = String.Empty; 
			iCompanyDesc = String.Empty; 
			iCompanyDescKana = String.Empty; 
			iMailNo = String.Empty; 
			iAddress1 = String.Empty; 
			iAddress2 = String.Empty; 
			iAddress3 = String.Empty; 
			iTel = String.Empty; 
			iFaxNo = String.Empty; 
			iSalesClosingDate = 0; 
			iPurClosingDate = 0; 
			iNativeCurrCd = String.Empty; 
			iDateType = String.Empty; 
			iMultiFacCls = String.Empty; 
			iTotalMstSetCls = String.Empty; 
			iMrpChkFlg = String.Empty; 
			iNatCurrFrcCls = String.Empty; 
			iUpRefCls = String.Empty; 
			iLvCtrlCls = String.Empty; 
			iFcUpCls = String.Empty; 
			iDataSavePath = String.Empty; 
			iLoginUser = String.Empty; 
			iLoginPswd = String.Empty; 
			iDataSavePathPs = String.Empty; 
			iLoginUserPs = String.Empty; 
			iLoginPswdPs = String.Empty; 
			iSalesCtrlCls = String.Empty; 
			iSalesEmpCls = String.Empty; 
			iSalesUnrealizedCtrlCls = String.Empty; 
			iPurCtrlCls = String.Empty; 
			iPurEmpCls = String.Empty; 
			iPurOwedCtrlCls = String.Empty; 
			iReserve1 = String.Empty; 
			iReserve2 = String.Empty; 
			iReserve3 = String.Empty; 
			iInqItem = String.Empty; 
			iEntryDate = DateTime.MinValue; 
			iUpdDate = DateTime.MinValue; 
			iUpdTimestamp = String.Empty; 

		}

		public TCompanyConditionMs(
			string i_company_cd, 
			string i_country_cd, 
			string i_language_cd, 
			string i_mail_no, 
			string i_tel, 
			string i_fax_no, 
			decimal i_sales_closing_date, 
			decimal i_pur_closing_date, 
			string i_native_curr_cd, 
			string i_date_type, 
			string i_multi_fac_cls, 
			string i_total_mst_set_cls, 
			string i_mrp_chk_flg, 
			string i_nat_curr_frc_cls, 
			string i_up_ref_cls, 
			string i_lv_ctrl_cls, 
			string i_fc_up_cls, 
			string i_data_save_path, 
			string i_data_save_path_ps, 
			string i_sales_ctrl_cls, 
			string i_sales_emp_cls, 
			string i_sales_unrealized_ctrl_cls, 
			string i_pur_ctrl_cls, 
			string i_pur_emp_cls, 
			string i_pur_owed_ctrl_cls, 
			DateTime i_entry_date, 
			DateTime i_upd_date, 
			string i_upd_timestamp)
			: this()
		{
			iCompanyCd = i_company_cd;
			iCoGroupCd = String.Empty;
			iCountryCd = i_country_cd;
			iLanguageCd = i_language_cd;
			iConditionCd = String.Empty;
			iCompanyArgDesc = String.Empty;
			iCompanyDesc = String.Empty;
			iCompanyDescKana = String.Empty;
			iMailNo = i_mail_no;
			iAddress1 = String.Empty;
			iAddress2 = String.Empty;
			iAddress3 = String.Empty;
			iTel = i_tel;
			iFaxNo = i_fax_no;
			iSalesClosingDate = i_sales_closing_date;
			iPurClosingDate = i_pur_closing_date;
			iNativeCurrCd = i_native_curr_cd;
			iDateType = i_date_type;
			iMultiFacCls = i_multi_fac_cls;
			iTotalMstSetCls = i_total_mst_set_cls;
			iMrpChkFlg = i_mrp_chk_flg;
			iNatCurrFrcCls = i_nat_curr_frc_cls;
			iUpRefCls = i_up_ref_cls;
			iLvCtrlCls = i_lv_ctrl_cls;
			iFcUpCls = i_fc_up_cls;
			iDataSavePath = i_data_save_path;
			iLoginUser = String.Empty;
			iLoginPswd = String.Empty;
			iDataSavePathPs = i_data_save_path_ps;
			iLoginUserPs = String.Empty;
			iLoginPswdPs = String.Empty;
			iSalesCtrlCls = i_sales_ctrl_cls;
			iSalesEmpCls = i_sales_emp_cls;
			iSalesUnrealizedCtrlCls = i_sales_unrealized_ctrl_cls;
			iPurCtrlCls = i_pur_ctrl_cls;
			iPurEmpCls = i_pur_emp_cls;
			iPurOwedCtrlCls = i_pur_owed_ctrl_cls;
			iReserve1 = String.Empty;
			iReserve2 = String.Empty;
			iReserve3 = String.Empty;
			iInqItem = String.Empty;
			iEntryDate = i_entry_date;
			iUpdDate = i_upd_date;
			iUpdTimestamp = i_upd_timestamp;
		}

		#endregion // End of Class Constuctor(s)
		
		#region Public Properties
			
		[PrimaryKey(PrimaryKeyType.Assigned ,"I_COMPANY_CD", Length=8)]
		public virtual string ICompanyCd
		{
			get { return iCompanyCd; }
			set { iCompanyCd = value; }
		}

		[Property(Column="I_CO_GROUP_CD", Length=8)]
		public virtual string ICoGroupCd
		{
			get { return iCoGroupCd; }
			set { iCoGroupCd = value; }
		}

		[Property(Column="I_COUNTRY_CD", NotNull=true, Length=6)]
		public virtual string ICountryCd
		{
			get { return iCountryCd; }
			set { iCountryCd = value; }
		}

		[Property(Column="I_LANGUAGE_CD", NotNull=true, Length=6)]
		public virtual string ILanguageCd
		{
			get { return iLanguageCd; }
			set { iLanguageCd = value; }
		}

		[Property(Column="I_CONDITION_CD", Length=6)]
		public virtual string IConditionCd
		{
			get { return iConditionCd; }
			set { iConditionCd = value; }
		}

		[Property(Column="I_COMPANY_ARG_DESC", Length=60)]
		public virtual string ICompanyArgDesc
		{
			get { return iCompanyArgDesc; }
			set { iCompanyArgDesc = value; }
		}

		[Property(Column="I_COMPANY_DESC", Length=120)]
		public virtual string ICompanyDesc
		{
			get { return iCompanyDesc; }
			set { iCompanyDesc = value; }
		}

		[Property(Column="I_COMPANY_DESC_KANA", Length=30)]
		public virtual string ICompanyDescKana
		{
			get { return iCompanyDescKana; }
			set { iCompanyDescKana = value; }
		}

		[Property(Column="I_MAIL_NO", NotNull=true, Length=10)]
		public virtual string IMailNo
		{
			get { return iMailNo; }
			set { iMailNo = value; }
		}

		[Property(Column="I_ADDRESS1", Length=80)]
		public virtual string IAddress1
		{
			get { return iAddress1; }
			set { iAddress1 = value; }
		}

		[Property(Column="I_ADDRESS2", Length=80)]
		public virtual string IAddress2
		{
			get { return iAddress2; }
			set { iAddress2 = value; }
		}

		[Property(Column="I_ADDRESS3", Length=80)]
		public virtual string IAddress3
		{
			get { return iAddress3; }
			set { iAddress3 = value; }
		}

		[Property(Column="I_TEL", NotNull=true, Length=20)]
		public virtual string ITel
		{
			get { return iTel; }
			set { iTel = value; }
		}

		[Property(Column="I_FAX_NO", NotNull=true, Length=20)]
		public virtual string IFaxNo
		{
			get { return iFaxNo; }
			set { iFaxNo = value; }
		}

		[Property(Column="I_SALES_CLOSING_DATE", NotNull=true)]
		public virtual decimal ISalesClosingDate
		{
			get { return iSalesClosingDate; }
			set { iSalesClosingDate = value; }
		}

		[Property(Column="I_PUR_CLOSING_DATE", NotNull=true)]
		public virtual decimal IPurClosingDate
		{
			get { return iPurClosingDate; }
			set { iPurClosingDate = value; }
		}

		[Property(Column="I_NATIVE_CURR_CD", NotNull=true, Length=4)]
		public virtual string INativeCurrCd
		{
			get { return iNativeCurrCd; }
			set { iNativeCurrCd = value; }
		}

		[Property(Column="I_DATE_TYPE", NotNull=true, Length=2)]
		public virtual string IDateType
		{
			get { return iDateType; }
			set { iDateType = value; }
		}

		[Property(Column="I_MULTI_FAC_CLS", NotNull=true, Length=2)]
		public virtual string IMultiFacCls
		{
			get { return iMultiFacCls; }
			set { iMultiFacCls = value; }
		}

		[Property(Column="I_TOTAL_MST_SET_CLS", NotNull=true, Length=2)]
		public virtual string ITotalMstSetCls
		{
			get { return iTotalMstSetCls; }
			set { iTotalMstSetCls = value; }
		}

		[Property(Column="I_MRP_CHK_FLG", NotNull=true, Length=1)]
		public virtual string IMrpChkFlg
		{
			get { return iMrpChkFlg; }
			set { iMrpChkFlg = value; }
		}

		[Property(Column="I_NAT_CURR_FRC_CLS", NotNull=true, Length=2)]
		public virtual string INatCurrFrcCls
		{
			get { return iNatCurrFrcCls; }
			set { iNatCurrFrcCls = value; }
		}

		[Property(Column="I_UP_REF_CLS", NotNull=true, Length=2)]
		public virtual string IUpRefCls
		{
			get { return iUpRefCls; }
			set { iUpRefCls = value; }
		}

		[Property(Column="I_LV_CTRL_CLS", NotNull=true, Length=2)]
		public virtual string ILvCtrlCls
		{
			get { return iLvCtrlCls; }
			set { iLvCtrlCls = value; }
		}

		[Property(Column="I_FC_UP_CLS", NotNull=true, Length=2)]
		public virtual string IFcUpCls
		{
			get { return iFcUpCls; }
			set { iFcUpCls = value; }
		}

		[Property(Column="I_DATA_SAVE_PATH", NotNull=true, Length=256)]
		public virtual string IDataSavePath
		{
			get { return iDataSavePath; }
			set { iDataSavePath = value; }
		}

		[Property(Column="I_LOGIN_USER", Length=20)]
		public virtual string ILoginUser
		{
			get { return iLoginUser; }
			set { iLoginUser = value; }
		}

		[Property(Column="I_LOGIN_PSWD", Length=30)]
		public virtual string ILoginPswd
		{
			get { return iLoginPswd; }
			set { iLoginPswd = value; }
		}

		[Property(Column="I_DATA_SAVE_PATH_PS", NotNull=true, Length=256)]
		public virtual string IDataSavePathPs
		{
			get { return iDataSavePathPs; }
			set { iDataSavePathPs = value; }
		}

		[Property(Column="I_LOGIN_USER_PS", Length=20)]
		public virtual string ILoginUserPs
		{
			get { return iLoginUserPs; }
			set { iLoginUserPs = value; }
		}

		[Property(Column="I_LOGIN_PSWD_PS", Length=30)]
		public virtual string ILoginPswdPs
		{
			get { return iLoginPswdPs; }
			set { iLoginPswdPs = value; }
		}

		[Property(Column="I_SALES_CTRL_CLS", NotNull=true, Length=2)]
		public virtual string ISalesCtrlCls
		{
			get { return iSalesCtrlCls; }
			set { iSalesCtrlCls = value; }
		}

		[Property(Column="I_SALES_EMP_CLS", NotNull=true, Length=2)]
		public virtual string ISalesEmpCls
		{
			get { return iSalesEmpCls; }
			set { iSalesEmpCls = value; }
		}

		[Property(Column="I_SALES_UNREALIZED_CTRL_CLS", NotNull=true, Length=2)]
		public virtual string ISalesUnrealizedCtrlCls
		{
			get { return iSalesUnrealizedCtrlCls; }
			set { iSalesUnrealizedCtrlCls = value; }
		}

		[Property(Column="I_PUR_CTRL_CLS", NotNull=true, Length=2)]
		public virtual string IPurCtrlCls
		{
			get { return iPurCtrlCls; }
			set { iPurCtrlCls = value; }
		}

		[Property(Column="I_PUR_EMP_CLS", NotNull=true, Length=2)]
		public virtual string IPurEmpCls
		{
			get { return iPurEmpCls; }
			set { iPurEmpCls = value; }
		}

		[Property(Column="I_PUR_OWED_CTRL_CLS", NotNull=true, Length=2)]
		public virtual string IPurOwedCtrlCls
		{
			get { return iPurOwedCtrlCls; }
			set { iPurOwedCtrlCls = value; }
		}

		[Property(Column="I_RESERVE1", Length=20)]
		public virtual string IReserve1
		{
			get { return iReserve1; }
			set { iReserve1 = value; }
		}

		[Property(Column="I_RESERVE2", Length=20)]
		public virtual string IReserve2
		{
			get { return iReserve2; }
			set { iReserve2 = value; }
		}

		[Property(Column="I_RESERVE3", Length=20)]
		public virtual string IReserve3
		{
			get { return iReserve3; }
			set { iReserve3 = value; }
		}

		[Property(Column="I_INQ_ITEM", Length=1)]
		public virtual string IInqItem
		{
			get { return iInqItem; }
			set { iInqItem = value; }
		}

		[Property(Column="I_ENTRY_DATE", NotNull=true)]
		public virtual DateTime IEntryDate
		{
			get { return iEntryDate; }
			set { iEntryDate = value; }
		}

		[Property(Column="I_UPD_DATE", NotNull=true)]
		public virtual DateTime IUpdDate
		{
			get { return iUpdDate; }
			set { iUpdDate = value; }
		}

		[Property(Column="I_UPD_TIMESTAMP", NotNull=true, Length=17)]
		public virtual string IUpdTimestamp
		{
			get { return iUpdTimestamp; }
			set { iUpdTimestamp = value; }
		}


		#endregion 

			
		#region Equals, HashCode and ToString overrides
		
		/// <summary>
		/// Local implementation of Equals based on unique value members
		/// </summary>
		public override bool Equals( object obj )
		{
			if( this == obj ) return true;
			if( ( obj == null ) || ( obj.GetType() != this.GetType() ) ) return false;
			TCompanyConditionMs castObj = (TCompanyConditionMs)obj; 
			return ( castObj != null ) &&
				( this.iCompanyCd == castObj.ICompanyCd );
		}
		
		/// <summary>
		/// Local implementation of GetHashCode based on unique value members
		/// </summary>
		public override int GetHashCode()
		{
			
			int hash = 57; 
			hash = 27 * hash * iCompanyCd.GetHashCode();
			return hash; 
		}
		
		/// <summary>
		/// Local implementation of ToString based on class members
		/// </summary>
		public override String ToString()
        {
            StringBuilder sbuffer = new StringBuilder();
			sbuffer.Append("{");
			
			sbuffer.AppendFormat("ICompanyCd = {0}, ",iCompanyCd);
			sbuffer.AppendFormat("ICoGroupCd = {0}, ",iCoGroupCd);
			sbuffer.AppendFormat("ICountryCd = {0}, ",iCountryCd);
			sbuffer.AppendFormat("ILanguageCd = {0}, ",iLanguageCd);
			sbuffer.AppendFormat("IConditionCd = {0}, ",iConditionCd);
			sbuffer.AppendFormat("ICompanyArgDesc = {0}, ",iCompanyArgDesc);
			sbuffer.AppendFormat("ICompanyDesc = {0}, ",iCompanyDesc);
			sbuffer.AppendFormat("ICompanyDescKana = {0}, ",iCompanyDescKana);
			sbuffer.AppendFormat("IMailNo = {0}, ",iMailNo);
			sbuffer.AppendFormat("IAddress1 = {0}, ",iAddress1);
			sbuffer.AppendFormat("IAddress2 = {0}, ",iAddress2);
			sbuffer.AppendFormat("IAddress3 = {0}, ",iAddress3);
			sbuffer.AppendFormat("ITel = {0}, ",iTel);
			sbuffer.AppendFormat("IFaxNo = {0}, ",iFaxNo);
			sbuffer.AppendFormat("ISalesClosingDate = {0}, ",iSalesClosingDate);
			sbuffer.AppendFormat("IPurClosingDate = {0}, ",iPurClosingDate);
			sbuffer.AppendFormat("INativeCurrCd = {0}, ",iNativeCurrCd);
			sbuffer.AppendFormat("IDateType = {0}, ",iDateType);
			sbuffer.AppendFormat("IMultiFacCls = {0}, ",iMultiFacCls);
			sbuffer.AppendFormat("ITotalMstSetCls = {0}, ",iTotalMstSetCls);
			sbuffer.AppendFormat("IMrpChkFlg = {0}, ",iMrpChkFlg);
			sbuffer.AppendFormat("INatCurrFrcCls = {0}, ",iNatCurrFrcCls);
			sbuffer.AppendFormat("IUpRefCls = {0}, ",iUpRefCls);
			sbuffer.AppendFormat("ILvCtrlCls = {0}, ",iLvCtrlCls);
			sbuffer.AppendFormat("IFcUpCls = {0}, ",iFcUpCls);
			sbuffer.AppendFormat("IDataSavePath = {0}, ",iDataSavePath);
			sbuffer.AppendFormat("ILoginUser = {0}, ",iLoginUser);
			sbuffer.AppendFormat("ILoginPswd = {0}, ",iLoginPswd);
			sbuffer.AppendFormat("IDataSavePathPs = {0}, ",iDataSavePathPs);
			sbuffer.AppendFormat("ILoginUserPs = {0}, ",iLoginUserPs);
			sbuffer.AppendFormat("ILoginPswdPs = {0}, ",iLoginPswdPs);
			sbuffer.AppendFormat("ISalesCtrlCls = {0}, ",iSalesCtrlCls);
			sbuffer.AppendFormat("ISalesEmpCls = {0}, ",iSalesEmpCls);
			sbuffer.AppendFormat("ISalesUnrealizedCtrlCls = {0}, ",iSalesUnrealizedCtrlCls);
			sbuffer.AppendFormat("IPurCtrlCls = {0}, ",iPurCtrlCls);
			sbuffer.AppendFormat("IPurEmpCls = {0}, ",iPurEmpCls);
			sbuffer.AppendFormat("IPurOwedCtrlCls = {0}, ",iPurOwedCtrlCls);
			sbuffer.AppendFormat("IReserve1 = {0}, ",iReserve1);
			sbuffer.AppendFormat("IReserve2 = {0}, ",iReserve2);
			sbuffer.AppendFormat("IReserve3 = {0}, ",iReserve3);
			sbuffer.AppendFormat("IInqItem = {0}, ",iInqItem);
			sbuffer.AppendFormat("IEntryDate = {0}, ",iEntryDate);
			sbuffer.AppendFormat("IUpdDate = {0}, ",iUpdDate);
			sbuffer.AppendFormat("IUpdTimestamp = {0}, ",iUpdTimestamp);
			sbuffer.Append(" }");
			return sbuffer.ToString();
        }
		
		#endregion
	}
}
